create table "public"."store" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "store_name" text not null
);

insert into store (store_name) values ('Theå‰µ');

alter table "public"."store" enable row level security;

alter table "public"."trade_head" add column "store_id" bigint not null default '1'::bigint;

CREATE UNIQUE INDEX store_pkey ON public.store USING btree (id);

alter table "public"."store" add constraint "store_pkey" PRIMARY KEY using index "store_pkey";

alter table "public"."trade_head" add constraint "trade_head_store_id_fkey" FOREIGN KEY (store_id) REFERENCES store(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."trade_head" validate constraint "trade_head_store_id_fkey";

create or replace view "public"."artist_trade" as  SELECT a.artist_name,
    b.id,
    b.trade_id,
    b.item_name,
    b.quantity,
    b.total_sales,
    b.discount,
    b.net_sales,
    b.artist_id,
    h.trade_date,
    s.store_name
   FROM (((artist a
     JOIN trade_body b ON ((a.id = b.artist_id)))
     JOIN trade_head h ON ((b.trade_id = h.trade_id)))
     LEFT JOIN store s ON ((s.id = h.store_id)));


grant delete on table "public"."store" to "anon";

grant insert on table "public"."store" to "anon";

grant references on table "public"."store" to "anon";

grant select on table "public"."store" to "anon";

grant trigger on table "public"."store" to "anon";

grant truncate on table "public"."store" to "anon";

grant update on table "public"."store" to "anon";

grant delete on table "public"."store" to "authenticated";

grant insert on table "public"."store" to "authenticated";

grant references on table "public"."store" to "authenticated";

grant select on table "public"."store" to "authenticated";

grant trigger on table "public"."store" to "authenticated";

grant truncate on table "public"."store" to "authenticated";

grant update on table "public"."store" to "authenticated";

grant delete on table "public"."store" to "service_role";

grant insert on table "public"."store" to "service_role";

grant references on table "public"."store" to "service_role";

grant select on table "public"."store" to "service_role";

grant trigger on table "public"."store" to "service_role";

grant truncate on table "public"."store" to "service_role";

grant update on table "public"."store" to "service_role";




create policy "Enable insert for authenticated users only"
on "public"."store"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."store"
as permissive
for select
to public
using (true);